# web.py (Ä‘áº·t á»Ÿ root autiner/)
import asyncio
import logging
import os
from fastapi import FastAPI
import httpx
from bots.telegram_bot.telegram_bot import run_bot

# Báº­t log toÃ n há»‡ thá»‘ng
logging.basicConfig(level=logging.INFO)
log = logging.getLogger(__name__)

app = FastAPI()

# URL Ä‘á»ƒ ping giá»¯ Render khÃ´ng ngá»§
PING_URL = os.getenv("PING_URL", "https://autiner.onrender.com")
PING_INTERVAL = 300  # 5 phÃºt

@app.on_event("startup")
async def startup_event():
    """Cháº¡y bot Telegram vÃ  self-ping song song."""
    loop = asyncio.get_event_loop()
    loop.create_task(run_bot())
    loop.create_task(self_ping_loop())
    log.info("ðŸš€ Bot vÃ  self-ping Ä‘Ã£ khá»Ÿi cháº¡y.")

@app.get("/")
async def root():
    return {"status": "ok", "message": "Bot is running"}

async def self_ping_loop():
    """Ping chÃ­nh app má»—i 5 phÃºt Ä‘á»ƒ giá»¯ cho Render khÃ´ng sleep."""
    while True:
        try:
            async with httpx.AsyncClient(timeout=10) as client:
                r = await client.get(PING_URL)
                log.info(f"[PING] {PING_URL} status={r.status_code}")
        except Exception as e:
            log.error(f"[PING ERROR] {e}")
        await asyncio.sleep(PING_INTERVAL)
